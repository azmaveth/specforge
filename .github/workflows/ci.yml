name: CI

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

env:
  MIX_ENV: test

jobs:
  test:
    name: Test on OTP ${{ matrix.otp }} / Elixir ${{ matrix.elixir }}
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        include:
          - otp: '27.0'
            elixir: '1.17.0'
          - otp: '27.0'
            elixir: '1.18.0'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        otp-version: ${{ matrix.otp }}
        elixir-version: ${{ matrix.elixir }}
    
    - name: Restore dependencies cache
      uses: actions/cache@v3
      with:
        path: |
          deps
          _build
        key: ${{ runner.os }}-mix-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-mix-${{ matrix.otp }}-${{ matrix.elixir }}-
    
    - name: Install dependencies
      run: |
        mix local.hex --force
        mix local.rebar --force
        mix deps.get
    
    - name: Check compilation warnings
      run: mix compile --warnings-as-errors
    
    - name: Run tests
      run: mix test
    
    - name: Check formatting
      run: mix format --check-formatted
    
    - name: Run Credo
      run: mix credo --strict
    
    - name: Run Sobelow security check
      run: mix sobelow --config
    
    - name: Check for unused dependencies
      run: mix deps.unlock --check-unused

  dialyzer:
    name: Dialyzer
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        otp-version: '27.0'
        elixir-version: '1.18.0'
    
    - name: Restore dependencies cache
      uses: actions/cache@v3
      with:
        path: |
          deps
          _build
        key: ${{ runner.os }}-mix-dialyzer-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-mix-dialyzer-
    
    - name: Restore PLT cache
      uses: actions/cache@v3
      with:
        path: priv/plts
        key: ${{ runner.os }}-plt-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-plt-
    
    - name: Install dependencies
      run: |
        mix local.hex --force
        mix local.rebar --force
        mix deps.get
    
    - name: Create PLTs
      run: |
        mkdir -p priv/plts
        mix dialyzer --plt
    
    - name: Run dialyzer
      run: mix dialyzer --format github

  build-release:
    name: Build Release
    runs-on: ubuntu-latest
    needs: [test, dialyzer]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        otp-version: '27.0'
        elixir-version: '1.18.0'
    
    - name: Install dependencies
      run: |
        mix local.hex --force
        mix local.rebar --force
        mix deps.get --only prod
    
    - name: Build escript
      run: |
        cd apps/specforge_cli
        MIX_ENV=prod mix escript.build
    
    - name: Upload escript artifact
      uses: actions/upload-artifact@v3
      with:
        name: specforge-cli
        path: spec
    
    - name: Build release
      run: MIX_ENV=prod mix release
      
    - name: Upload release artifact
      uses: actions/upload-artifact@v3
      with:
        name: specforge-release
        path: _build/prod/rel/specforge